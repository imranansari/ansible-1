---
- name: download and checksum unifi_exporter binary
  tags:
    - unifi_exporter
  get_url:
    url: "{{ unifi_exporter_url }}"
    dest: "/tmp/unifi_exporter"
    checksum: "sha256:{{ unifi_exporter_sha256 }}"

- name: create unifi_exporter user
  tags:
    - unifi_exporter
  user:
    name: unifi_exporter
    shell: "/bin/false"
    comment: "unifi_exporter service user"

- name: check if unifi_exporter service exists
  tags:
    - unifi_exporter
  stat:
    path: "/lib/systemd/system/unifi_exporter.service"
  register: checked

- name: stop unifi_exporter service if it exists
  tags:
    - unifi_exporter
  when: checked.stat.exists
  service:
    name: unifi_exporter
    state: stopped

- name: copy unifi_exporter binary to /usr/local/bin
  tags:
    - unifi_exporter
  command: "cp /tmp/unifi_exporter /usr/local/bin/"

- name: set permissions on unifi_exporter binary
  tags:
    - unifi_exporter
  file:
    path: "/usr/local/bin/unifi_exporter"
    owner: unifi_exporter
    group: unifi_exporter
    mode: 0755

- name: create unifi_exporter systemd unit
  tags:
    - unifi_exporter
  template:
    src: unifi_exporter.service.j2
    dest: "/lib/systemd/system/unifi_exporter.service"

- name: reload systemd configurations
  tags:
    - unifi_exporter
  command: "systemctl daemon-reload"

- name: start unifi_exporter service
  tags:
    - unifi_exporter
  service:
    name: unifi_exporter
    state: started
    enabled: yes

- name: remove temporary files
  tags:
    - unifi_exporter
  file:
    path: "/tmp/unifi_exporter"
    state: absent
